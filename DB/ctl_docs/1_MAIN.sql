
DROP DATABASE CTL_DOCS;
CREATE DATABASE CTL_DOCS;
USE CTL_DOCS;

DROP TABLE IF EXISTS APPROVER;
CREATE TABLE APPROVER(
	APPROVER_ID INT PRIMARY KEY AUTO_INCREMENT,
    FULL_NAME VARCHAR(100) NOT NULL,
    POSITION_ID INT NOT NULL,
    DEPTO_ID INT NOT NULL
);

CREATE TABLE DOC_APPROVER(
	DOC_APPROVER_ID INT PRIMARY KEY AUTO_INCREMENT,
    DOC_FLOW_ID INT NOT NULL,
    APPROVER_ID INT NOT NULL,
    SEQUENCE INT NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    ACTION VARCHAR(450)
);

CREATE TABLE DOC_FLOW(
	DOC_FLOW_ID INT PRIMARY KEY AUTO_INCREMENT,
    TYPE_ID INT NOT NULL,
    KEY1 VARCHAR(450),
    KEY2 VARCHAR(450),
    KEY3 VARCHAR(450),
    KEY4 VARCHAR(450)
);

CREATE TABLE DOC_TYPE(
	TYPE_ID INT PRIMARY KEY AUTO_INCREMENT,
    TYPE_CODE VARCHAR(100)
);

CREATE TABLE DOCUMENT(
	DOCUMENT_ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100),
    TYPE_ID INT NOT NULL
);

CREATE TABLE DOC_FILE(
	FILE_ID INT PRIMARY KEY AUTO_INCREMENT,
    DOCUMENT_ID INT NOT NULL,
    DOC_IMG LONGBLOB
);

ALTER TABLE DOC_APPROVER
ADD CONSTRAINT KF_DOC_FLOW_ID
FOREIGN KEY (DOC_FLOW_ID) REFERENCES DOC_FLOW(DOC_FLOW_ID);

ALTER TABLE DOC_APPROVER 
ADD CONSTRAINT FK_APPROVER_ID 
FOREIGN KEY (APPROVER_ID) REFERENCES APPROVER(APPROVER_ID);

ALTER TABLE DOC_FLOW
ADD CONSTRAINT FK_TYPE_ID
FOREIGN KEY (TYPE_ID) REFERENCES DOC_TYPE(TYPE_ID);

ALTER TABLE DOCUMENT
ADD FOREIGN KEY (TYPE_ID) REFERENCES DOC_TYPE(TYPE_ID);

ALTER TABLE DOC_FILE
ADD CONSTRAINT FK_DOCUMENT_ID
FOREIGN KEY (DOCUMENT_ID) REFERENCES DOCUMENT(DOCUMENT_ID);


/* ######################### ADD AUDIT COLUMNS TO ALL TABLES! ##############################*/
DROP PROCEDURE IF EXISTS ADD_AUDIT_COLUMNS;
DELIMITER // 
CREATE PROCEDURE ADD_AUDIT_COLUMNS(
	OUT OUT_MSG VARCHAR(500)
)
BEGIN	
    DECLARE TABLE_N VARCHAR(300) DEFAULT '';
	DECLARE TABLES_C CURSOR FOR SELECT TABLE_NAME FROM information_schema.tables WHERE TABLE_SCHEMA = 'CTL_DOCS';
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
    BEGIN
		GET DIAGNOSTICS CONDITION 1 @errno = MYSQL_ERRNO, @errmsg = MESSAGE_TEXT;
		SET OUT_MSG = CONCAT( 'ERROR EXECUTING PROCESS [DYNAMIC_SQL_STMT] - (', @errno ,'): ', @errmsg);
	END;
    
	SET OUT_MSG = 'OK';
    
    OPEN TABLES_C;    
    TABLE_LOOP: LOOP
    
		FETCH TABLES_C INTO TABLE_N;        
        
        SET @s = CONCAT(
			'ALTER TABLE ', 
				TABLE_N ,
			' ADD STATUS VARCHAR(40) NOT NULL DEFAULT \'ENABLED\' CHECK (STATUS IN (\'ENABLED\', \'DISABLED\')),
              ADD CREATED_ON DATETIME NOT NULL DEFAULT NOW(),
              ADD CREATED_BY VARCHAR(50),
              ADD UPDATED_ON DATETIME,
              ADD UPDATED_BY VARCHAR(50)'
		);			
        
		PREPARE stmt FROM @s;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
        
	END LOOP;    
    CLOSE TABLES_C;
	
END
//
DELIMITER ;

set @msg = null;
call ADD_AUDIT_COLUMNS(@msg);
SELECT @msg;