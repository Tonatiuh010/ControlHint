DROP DATABASE IF EXISTS CTL_ACCESS;
CREATE DATABASE CTL_ACCESS;
USE CTL_ACCESS;

/* ########################### ACCESS_LEVEL ########################### */
DROP TABLE IF EXISTS ACCESS_LEVEL CASCADE;
CREATE TABLE ACCESS_LEVEL
(
	ACCESS_LEVEL_ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,	
	CONSTRAINT PK_ACCESS_LEVEL PRIMARY KEY (ACCESS_LEVEL_ID ASC)
);

/* ########################### SHIFT ########################### */
DROP TABLE IF EXISTS SHIFT CASCADE;
CREATE TABLE SHIFT
(
	SHIFT_ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	CLOCK_IN TIME NOT NULL,
	CLOCK_OUT TIME NOT NULL,
	LUNCH_TIME TIME NOT NULL,
    DAY_COUNT INT DEFAULT 0 NOT NULL,
	CONSTRAINT PK_SHIFTS PRIMARY KEY (SHIFT_ID ASC)
);

/* ########################### DEPARTMENT ########################### */
DROP TABLE IF EXISTS DEPARTMENT CASCADE;
CREATE TABLE DEPARTMENT
(
	DEPARTMENT_ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	CODE VARCHAR(20) NOT NULL,	
	CONSTRAINT PK_DEPARTMENT PRIMARY KEY (DEPARTMENT_ID ASC)
);

ALTER TABLE DEPARTMENT ADD CONSTRAINT UQ_DEPTO_CODE UNIQUE (CODE);

/* ########################### JOB ########################### */
DROP TABLE IF EXISTS JOB;
CREATE TABLE JOB (
	JOB_ID INT NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(50) NOT NULL,
    DESCRIPTION TEXT,    
	CONSTRAINT PK_JOB PRIMARY KEY (JOB_ID ASC)
);

/* ########################### POSITION ########################### */
DROP TABLE IF EXISTS POSITION CASCADE;
CREATE TABLE POSITION
(
	POSITION_ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
    DEPARTMENT_ID INT NOT NULL,
    JOB_ID INT NOT NULL,
	CONSTRAINT PK_POSITION PRIMARY KEY (POSITION_ID ASC)
);

ALTER TABLE POSITION ADD CONSTRAINT FK_POSITION_DEPARTMENT FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT (DEPARTMENT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
					 ADD CONSTRAINT FK_JOB_POSITION FOREIGN KEY (JOB_ID) REFERENCES JOB(JOB_ID),
                     ADD CONSTRAINT UQ_JOB_POSITION UNIQUE (POSITION_ID, DEPARTMENT_ID, JOB_ID);

/* ########################### EMPLOYEE ########################### */
DROP TABLE IF EXISTS EMPLOYEE CASCADE;
CREATE TABLE EMPLOYEE
(
	EMPLOYEE_ID INT NOT NULL AUTO_INCREMENT,
	FIRST_NAME VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(50) NULL,
	POSITION_ID INT NULL,
	SHIFT INT NULL,    
	IMAGE LONGBLOB,	
	CONSTRAINT PK_EMPLOYEE PRIMARY KEY (EMPLOYEE_ID ASC)
);

ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE_POSITION FOREIGN KEY (POSITION_ID) REFERENCES POSITION (POSITION_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
					 ADD CONSTRAINT FK_EMPLOYEE_SHIFTS FOREIGN KEY (SHIFT) REFERENCES SHIFT (SHIFT_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

/* ########################### EMPLOYEE_ACCESS_LEVEL ########################### */
DROP TABLE IF EXISTS EMPLOYEE_ACCESS_LEVEL CASCADE;
CREATE TABLE EMPLOYEE_ACCESS_LEVEL
(
	EMPLOYEE_ID INT NOT NULL,
	ACCESS_LEVEL_ID INT NOT NULL,
	CONSTRAINT PK_EMPLOYEE_ACCESS_LEVEL PRIMARY KEY (EMPLOYEE_ID ASC, ACCESS_LEVEL_ID ASC)
);

ALTER TABLE EMPLOYEE_ACCESS_LEVEL ADD CONSTRAINT FK_EMPLOYEE_ACCESS_LEVEL_ACCESS_LEVEL FOREIGN KEY (ACCESS_LEVEL_ID) REFERENCES ACCESS_LEVEL (ACCESS_LEVEL_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
								  ADD CONSTRAINT FK_EMPLOYEE_ACCESS_LEVEL_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT;

/* ########################### CONTROL_CHECK ########################### */
DROP TABLE IF EXISTS CONTROL_CHECK;
CREATE TABLE CONTROL_CHECK (
	CHECK_ID INT NOT NULL AUTO_INCREMENT,
    EMPLOYEE_ID INT NOT NULL,
    TIME_EXP VARCHAR(6) NOT NULL,
    CHECK_DT DATETIME NOT NULL,
    TYPE VARCHAR(5) NOT NULL DEFAULT 'IN', -- CHECADA DE ENTRADA Y SALIDA	
	CONSTRAINT PK_CONTROL_CHECK PRIMARY KEY (CHECK_ID ASC)
);

ALTER TABLE CONTROL_CHECK ADD COLUMN DEVICE_ID INT NOT NULL,
						  ADD CONSTRAINT CH_TYPE CHECK (TYPE IN ('IN', 'OUT')),
                          ADD CONSTRAINT FK_CHECK_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID);
                          
/* ########################### EMPLOYEE_HINT ########################### */
DROP TABLE IF EXISTS EMPLOYEE_HINT;
CREATE TABLE EMPLOYEE_HINT(
	HINT_ID INT PRIMARY KEY AUTO_INCREMENT,
    HINT_NAME VARCHAR(40) NOT NULL,
    HINT_IMG LONGBLOB NOT NULL,
    EMPLOYEE_ID INT NOT NULL,
    LAST_UPDATE DATETIME NOT NULL DEFAULT NOW(),
    EXTENSION_IMG VARCHAR(20) NOT NULL DEFAULT 'JPEG'
);

ALTER TABLE EMPLOYEE_HINT ADD CONSTRAINT FK_EMPLOYEE_HINT FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE (EMPLOYEE_ID),
						  ADD CONSTRAINT UQ_HINT_NAME UNIQUE(HINT_NAME);


/*######################### ADD AUDIT COLUMNS TO ALL TABLES! ##############################*/
DROP PROCEDURE IF EXISTS ADD_AUDIT_COLUMNS;
DELIMITER // 
CREATE PROCEDURE ADD_AUDIT_COLUMNS(
	OUT OUT_MSG VARCHAR(500)
)
BEGIN	
    DECLARE TABLE_N VARCHAR(300) DEFAULT '';
	DECLARE TABLES_C CURSOR FOR SELECT TABLE_NAME FROM information_schema.tables WHERE TABLE_SCHEMA = 'CTL_ACCESS';
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
    BEGIN
		GET DIAGNOSTICS CONDITION 1 @errno = MYSQL_ERRNO, @errmsg = MESSAGE_TEXT;
		SET OUT_MSG = CONCAT( 'ERROR EXECUTING PROCESS [DYNAMIC_SQL_STMT] - (', @errno ,'): ', @errmsg);
	END;
    
	SET OUT_MSG = 'OK';
    
    OPEN TABLES_C;    
    TABLE_LOOP: LOOP
    
		FETCH TABLES_C INTO TABLE_N;        
        
        SET @s = CONCAT(
			'ALTER TABLE ', 
				TABLE_N ,
			' ADD STATUS VARCHAR(40) NOT NULL DEFAULT \'ENABLED\' CHECK (STATUS IN (\'ENABLED\', \'DISABLED\')),
              ADD CREATED_ON DATETIME NOT NULL DEFAULT NOW(),
              ADD CREATED_BY VARCHAR(50),
              ADD UPDATED_ON DATETIME,
              ADD UPDATED_BY VARCHAR(50)'
		);			
        
		PREPARE stmt FROM @s;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
        
	END LOOP;    
    CLOSE TABLES_C;
	
END
//
DELIMITER ;

set @msg = null;
call ADD_AUDIT_COLUMNS(@msg);
SELECT @msg;
