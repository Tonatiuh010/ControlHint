USE CTL_HINT;

/* ############################# DEVICE ############################### */

DROP TABLE IF EXISTS DEV_CONNECTION;
CREATE TABLE DEV_CONNECTION (
	DEVICE_ID INT PRIMARY KEY AUTO_INCREMENT,
    DEVICE_NAME VARCHAR(100) NOT NULL,
    DEVICE_MODEL VARCHAR(300),
    IP_ADDRESS LONG NOT NULL,
    IS_ACTIVE BOOL NOT NULL DEFAULT TRUE,
    LAST_UPDATE DATETIME NOT NULL DEFAULT NOW()
);

DROP TABLE IF EXISTS DEV_FLOW;
CREATE TABLE DEV_FLOW (
	DEVICE_ID INT PRIMARY KEY,
    FLOW_ID INT NOT NULL,
    LAST_UPDATE DATETIME NOT NULL DEFAULT NOW()
);

ALTER TABLE DEV_FLOW ADD CONSTRAINT FK_DEVICE FOREIGN KEY (DEVICE_ID) REFERENCES DEV_CONNECTION (DEVICE_ID),
					 ADD CONSTRAINT FK_DEVICE_FLOW FOREIGN KEY (FLOW_ID) REFERENCES FLOW_SERVICE (FLOW_ID);

DROP TABLE IF EXISTS DEV_HINT_CONFIG;
CREATE TABLE DEV_HINT_CONFIG (
	DEVICE_ID INT NOT NULL,
    HINT_KEY_ID INT NOT NULL,
    EMPLOYEE_ID INT NOT NULL
);

ALTER TABLE DEV_HINT_CONFIG ADD CONSTRAINT PK_DEV_HINT_CONFIG PRIMARY KEY(DEVICE_ID, HINT_KEY_ID, EMPLOYEE_ID),
							ADD CONSTRAINT FH_DEV_CONNECTION FOREIGN KEY (DEVICE_ID) REFERENCES DEV_CONNECTION(DEVICE_ID);

                     
/*######################### ADD AUDIT COLUMNS TO ALL TABLES! ##############################*/
DROP PROCEDURE IF EXISTS ADD_AUDIT_COLUMNS;
DELIMITER // 
CREATE PROCEDURE ADD_AUDIT_COLUMNS(
	OUT OUT_MSG VARCHAR(500)
)
BEGIN	
	-- AND UPPER(TABLE_NAME) = 'DEV_HINT_CONFIG'
    DECLARE TABLE_N VARCHAR(300) DEFAULT '';
	DECLARE TABLES_C CURSOR FOR SELECT TABLE_NAME FROM information_schema.tables WHERE TABLE_SCHEMA = 'CTL_HINT';
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
    BEGIN
		GET DIAGNOSTICS CONDITION 1 @errno = MYSQL_ERRNO, @errmsg = MESSAGE_TEXT;
		SET OUT_MSG = CONCAT( 'ERROR EXECUTING PROCESS [DYNAMIC_SQL_STMT] - (', @errno ,'): ', @errmsg);
	END;
    
	SET OUT_MSG = 'OK';
    
    OPEN TABLES_C;    
    TABLE_LOOP: LOOP
    
		FETCH TABLES_C INTO TABLE_N;        
        
        SET @s = CONCAT(
			'ALTER TABLE ', 
				TABLE_N ,
			' ADD STATUS VARCHAR(40) NOT NULL DEFAULT \'ENABLED\' CHECK (STATUS IN (\'ENABLED\', \'DISABLED\')),
              ADD CREATED_ON DATETIME NOT NULL DEFAULT NOW(),
              ADD CREATED_BY VARCHAR(50),
              ADD UPDATED_ON DATETIME,
              ADD UPDATED_BY VARCHAR(50)'
		);			
        
		PREPARE stmt FROM @s;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt;
        
	END LOOP;    
    CLOSE TABLES_C;
	
END
//
DELIMITER ;

set @msg = null;
call ADD_AUDIT_COLUMNS(@msg);
SELECT @msg;