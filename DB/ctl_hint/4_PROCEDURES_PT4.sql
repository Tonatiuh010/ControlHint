/* ############################# SET_DEV_CONNECTION ############################### */
DROP PROCEDURE IF EXISTS SET_DEV_CONNECTION;
DELIMITER //
CREATE PROCEDURE SET_DEV_CONNECTION(
	IN IN_DEVICE_ID INT,
    IN IN_DEVICE_NAME  VARCHAR(100),
    IN IN_DEVICE_MODEL VARCHAR(100),
	IN IN_IP_ADDRESS VARCHAR(20),
    IN IN_USER VARCHAR(100),
    OUT OUT_MSG VARCHAR(450)
)
BEGIN
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
		GET DIAGNOSTICS CONDITION 1 @SQL_STATUS = RETURNED_SQLSTATE, @ERR_MSG = MESSAGE_TEXT;
        SET OUT_MSG := CONCAT('ERROR -> ON [SET_DEV_CONNECTION] ', @SQL_STATUS, ' - ', @ERR_MSG);
	END;
    SET OUT_MSG = 'OK';
    
    SET IN_DEVICE_ID = GET_DEVICE(IN_DEVICE_NAME);
    
    UPDATE DEV_CONNECTION SET
		DEVICE_NAME = IN_DEVICE_NAME,
        DEVICE_MODEL = IN_DEVICE_MODEL,
        IP_ADDRESS = INET_ATON(IN_IP_ADDRESS),
        IS_ACTIVE = 1,
        STATUS = 'ENABLED',
        LAST_UPDATE = NOW(),
        UPDATED_ON = NOW(),
        UPDATED_BY = IN_USER
    WHERE
		DEVICE_ID = IN_DEVICE_ID;
	
    IF ROW_COUNT() = 0 THEN
		INSERT INTO DEV_CONNECTION(
			DEVICE_ID,
            DEVICE_NAME,
            DEVICE_MODEL,
            IP_ADDRESS,
            LAST_UPDATE,
            IS_ACTIVE,
            CREATED_BY
        )VALUE(
			IN_DEVICE_ID,
            IN_DEVICE_NAME,
            IN_DEVICE_MODEL,
            INET_ATON(IN_IP_ADDRESS),
            NOW(),
            1,
            IN_USER
        );
	END IF;
END //
DELIMITER ;

-- SET @MSG = '';
-- CALL SET_DEV_CONNECTION(
-- 	NULL,
--     'ESP-FG-TNT',
--     'ESP-32-DEV-KIT',
--     '127.0.0.1',
--     'TEST_API',
--     @MSG
-- );

############################# GET_DEV_CONNECTION ############################### */
DROP PROCEDURE IF EXISTS GET_DEV_CONNECTION;
DELIMITER //
CREATE PROCEDURE GET_DEV_CONNECTION  (
	IN IN_DEVICE_ID INT,
    IN IN_DEVICE_NAME VARCHAR(100),
    IN IN_DEVICE_MODEL VARCHAR(100),
	IN IN_IP_ADDRESS VARCHAR(12),
    OUT OUT_MSG VARCHAR(450)
)
BEGIN 
	DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
	BEGIN 
		GET DIAGNOSTICS CONDITION 1 @SQL_STATUS = RETURNED_SQLSTATE, @ERR_MSG = MESSAGE_TEXT;
        SET OUT_MSG := CONCAT('ERROR -> ON [GET_DEV_CONNECTION]', @SQL_STATUS, ' - ', @ERR_MSG);
	END;
    SET OUT_MSG = 'OK';
    
    SELECT 
		 DEVICE_ID,
		 DEVICE_NAME,
         DEVICE_MODEL,
         IS_ACTIVE,
		 INET_NTOA(IP_ADDRESS) IP,
         LAST_UPDATE
	FROM 
		DEV_CONNECTION
	WHERE
		DEVICE_ID = IFNULL(IN_DEVICE_ID, DEVICE_ID)
	AND DEVICE_NAME = IFNULL(IN_DEVICE_NAME, DEVICE_NAME)
	AND DEVICE_MODEL = IFNULL(IN_DEVICE_MODEL, DEVICE_MODEL)
    AND IP_ADDRESS = IFNULL(INET_ATON(IN_IP_ADDRESS), IP_ADDRESS);
END //
DELIMITER ;

-- SET @msg = '';
-- CALL GET_DEV_CONNECTION(NULL, NULL, NULL, NULL, @msg);
-- SELECT @msg;